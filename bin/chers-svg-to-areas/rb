#!/ruby

require 'nokogiri'
require 'pry'
require 'securerandom'
require 'ostruct'
require 'jbuilder'

puts <<INFO if ARGV.empty?
  Usage: #{__FILE__} file.svg*
    where file.svg has the format of http://oakscastle.github.io/map/floor/first/index.svg
  Output: JSON matching https://github.com/oakscastle/event/
INFO

ARGV.each do |filename|
  svg = File.open(filename){ |file| Nokogiri::XML(file) }
  dir = svg.at_xpath('//@area:base').value

  svg.xpath('//*[@area:id]').map do |area|
    name = area.attributes['id'].value
    id = "#{dir}/#{name}"

    FileUtils.mkdir_p id

    filename = "#{id}/svg"
    
    if File.exist?(filename)
      puts "Skipping Existing: #{filename}"
    else
      File.open(filename, 'w') do |file|
        Nokogiri::XML::Document.new.tap do |doc|
          svg = Nokogiri::XML::Node.new('svg', doc)
          doc.add_child(svg)
          svg.add_child(area.dup)
        end.tap do |doc|
          file.write doc.to_xml
          puts "XML to: #{filename}"
        end
      end
    end

    area = {
      id: id,
      name: name,
      image: filename
    }
    
    container = {
      id: SecureRandom.uuid,
      area: id
    }
    
    OpenStruct.new({ area: area, container: container })
  end.tap do |out|
    filename = "#{dir}/json"
    File.open(filename, 'w') do |file|
      Jbuilder.new do |json|
        json.out {
          json.areas out.map(&:area)
          json.containers out.map(&:container)
        }
      end.tap do |doc|
        file.write doc.to_json
        puts "JSON to: #{filename}"
      end
    end
  end
end
